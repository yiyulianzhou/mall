<?php

class SellerModel extends MY_Model
{

    public function __construct()
    {
        parent::__construct();
    }
    /**
     * @DateTime  2017-12-19
     * @copyright 卖家列表
     * @return    [type]      [description]
     */
    public function sellerList( $lock,$shop,$page,$title ){
        $this->db->select('a.id,a.shop,a.pic,a.address_id,a.name,a.phone,a.is_real,a.is_health,a.create_time,a.lock,b.title');
        $this->db->from('user_shop a');
        $this->db->join( 'building b', 'b.id = a.address_id', 'left' );
        if(!empty($shop)){
            $this->db->like( 'a.shop', $shop );
        }
        if(!empty($title)){
            $this->db->like( 'b.title', $title );
        }
        if($lock >= 0){
            $this->db->where( 'lock', $lock );
        }
        $this->db->where( 'uid > ', '10' );
        $total_rows = $this->db->count_all_results('', false);

        $pager = $this->setPager($total_rows, $page);
        $this->db->limit($pager['per_page'], $pager['start_page']);
        $this->db->order_by('id', 'DESC');

        $res['list'] = $this->db->get()->result_array();
        $res['pager_links'] = $this->pagination->create_links();
        return $res;
    }
    /**
     * @copyright 卖家解封与封禁
     * @param     [type]      $id     [description]
     * @param     [type]      $lock [description]
     * @return    [type]              [description]
     */
    public function sellerLock( $id, $lock ){
        $lock = ($lock == '0') ? '1' : '0';
        $res = $this->db->update('user_shop',array( 'lock'=>$lock ),array( 'id'=>$id ));
        if($res){
            return true;
        }
    }
    /**
     * @DateTime  2017-12-20
     * @copyright 卖家详情
     * @param     [type]      $id [description]
     * @return    [type]          [description]
     */
    public function sellerDetail( $id )
    {
        $this->db->select('a.*,b.title,b.address');
        $this->db->from('user_shop a');
        $this->db->join( 'building b', 'b.id = a.address_id', 'left' );
        $this->db->where( 'a.id', $id );
        $res = $this->db->get()->row_array();
        return $res;
    }
    /**
     * @copyright 卖家审核
     * @param     [type]      $id        [description]
     * @param     [type]      $is_real   [description]
     * @param     [type]      $is_health [description]
     * @return    [type]                 [description]
     */
    public function sellerVerify( $id, $is_real, $is_health )
    {
        if(!empty($is_real) || $is_real == '0'){
            $data['is_real'] = $is_real;
        }
        $data['is_health'] = $is_health;
        $res = $this->db->update( 'user_shop', $data,array('id'=>$id) );
    }

    /**
     * @copyright 卖家顶部统计数据
     * @param     [type]      $id        [description]
     * @return    [type]                 [description]
     */
    public function countSeller()
    {
        //新增卖家
        $this->db->select('count(id) as num');
        $this->db->from('user');
        //卖家
        $this->db->where('is_sellers = ',1);
        $today = strtotime(date('Y-m-d'));

        $this->db->where('create_time >=',$today);
        $tmp = $this->db->get()->row_array();
        $data['new_sellers'] = $tmp['num'];

        //卖家总数
        $this->db->select('count(id) as total');
        $this->db->from('user');

        $this->db->where('is_sellers = ',1);

        $tmp = $this->db->get()->row_array();
        $data['total_sellers'] = $tmp['total'];
        return $data;
    }

    /**
     * @copyright 卖家销售统计
     * @param     [type]      $id        [description]
     * @return    [type]                 [description]
     */

    public function getSellerSales($search)
    {
        $this->db->select('sum(a.money) mon,b.username');
        $this->db->from('order a');
        $this->db->join('user b','b.id = a.sellers_id');
        //自选时间
        if (isset($search['s_start_time']) && isset($search['s_end_time'])){
            $search['s_day'] = '';
            $start_time = $search['s_start_time'];
            $end_time = $search['s_end_time'];
            $today = !empty($end_time) ? strtotime(str_replace('／', '-', $end_time)) : strtotime(date("Y-m-d"));
            $start = !empty($start_time) ? strtotime(str_replace('／', '-', $start_time)) : ($today - 86400);
        }
        //固定时间区间
        if (isset($search['s_day']) && !empty($search['s_day'])) {
            $day = $search['s_day4'];
            switch ($day) {
                //今日
                case 'day4':
                    $today = strtotime(date('Y-m-d'), time());
                    $start = $today - 86400;
                    break;
                //本周
                case 'week4':
                    $today = strtotime(date('Y-m-d'), time());
                    $start = $today - (6 * 86400);
                    break;
                //本月
                case 'month4':
                    $today = strtotime(date('Y-m-d'), time());
                    //本月第一天
                    $start = strtotime(date('Y-m-01'));
                    break;
            }
        }
        //时间
        $this->db->where('a.create_time >=',$start);
        $this->db->where('a.create_time <=',$today);
        //订单金额按卖家分组
        $this->db->group_by('sellers_id');
        $this->db->order_by('mon','DESC');
        $this->db->limit(10);
        $res = $this->db->get()->result_array();
        $res['names'] = array_column($res,'username');
        $res['mons'] = array_column($res,'mon');

        return $res;
    }

    /**
     * @copyright 卖家用户统计
     * @param     [type]      $id        [description]
     * @return    [type]                 [description]
     */

    public function getSellerUsers()
    {
        $this->db->select('sum(a.money) mon,b.username');
        $this->db->from('order a');
        $this->db->join('user b','b.id = a.sellers_id');

        //订单金额按卖家分组
        $this->db->group_by('sellers_id');
        $this->db->order_by('mon','DESC');
        $this->db->limit(10);
        $res = $this->db->get()->result_array();
        $res['names'] = array_column($res,'username');
        $res['mons'] = array_column($res,'mon');

        return $res;
    }
}