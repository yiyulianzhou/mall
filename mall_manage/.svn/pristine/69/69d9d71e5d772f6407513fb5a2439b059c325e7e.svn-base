<?php

/**
 * 订单管理
 */
class OrderModel extends MY_Model
{

    public function __construct()
    {
        parent::__construct();
    }

    /**
     * @copyright 订单详情
     * @param     [type]      $id [description]
     * @return    [type]          [description]
     */
    public function orderDetail( $id )
    {
        $this->db->select( 'a.*,b.username as buyerName,c.name as shipName,c.phone as shipPhone,d.name,e.name as goodsName,f.name as sellerName,g.address' );
        $this->db->from( 'order a' );
        $this->db->join('user b','b.id = a.buyer_id','left');
        $this->db->join('user_address c','c.id = a.address_id','left');
        $this->db->join('goods_model d','d.id = a.geid','left');
        $this->db->join('goods e','e.id = d.gid','left');
        $this->db->join('user_shop f','f.id = a.sellers_id','left');
        $this->db->join('building g','g.id = c.address_id','left');
        $this->db->where( 'a.id', $id );
        $res = $this->db->get()->row_array();
        return $res;
    }

    /**
     * @copyright 删除订单
     * @param     [type]      $id [description]
     * @return    [type]          [description]
     */

    public function delete( $id )
    {
        $res = $this->db->update('order',array('status'=>'11'),array('id'=>$id));

        if($res){
            return true;
        }

    }

    /**
     * @copyright 订单列表数据
     * @param     [type]      $id [description]
     * @return    [type]          [description]
     */

    public function getOrderList($search)
    {
        $this->db->select( 'a.*,b.username,d.name gname,e.name goods_name,f.shop' );
        $this->db->from( 'order a' );

        $this->db->join('user b','b.id = a.buyer_id','left');

        $this->db->join('goods_model d','d.id = a.geid','left');
        $this->db->join('goods e','e.id = d.gid','left');
        $this->db->join('user_shop f','f.uid = a.sellers_id','left');
        $this->db->order_by('a.create_time','DESC');
        if (isset($search['state']) && $search['state'] != ''){
            $status = $search['state'];
            $this->db->where('a.status = ',$status);
        }
        $this->db->where('a.status !=',11);

        //计算总记录条数
        $total_rows = $this->db->count_all_results('',false);
        // 翻页设置
        $per_page   = isset($this->data['base']['per_page']) ? $this->data['base']['per_page'] : $this->data['common']['per_page'];
        $uri_segment = isset($this->data['base']['uri_segment']) ? $this->data['base']['uri_segment'] : $this->data['common']['uri_segment'];
        $curpage     = $this->uri->segment($uri_segment) ? $this->uri->segment($uri_segment) : 1;

        $start_page  = ($curpage && is_numeric($curpage) && $curpage > 1) ? ($curpage - 1) * $per_page : 0;

        $this->db->limit($per_page, $start_page);

        $data['list'] = $this->db->get()->result_array();

        // 启始页
        $data['start_page'] = $start_page;
        // 总条数
        $data['total_rows'] = $total_rows;
        // 每页多少条
        $data['per_page'] = $per_page;
        // 当前页
        $data['curpage'] = $curpage;
        // 当前页查询结果总条数
        $data['list_count'] = count($data['list']);
        // 总页数，有小数进1
        $data['pages'] = ceil($total_rows / $per_page);

        return $data;
    }

    /**
     * @copyright 订单报表销售额前10
     * @param     [type]      $id [description]
     * @return    [type]          [description]
     */

    public function getOrderData ($search)

    {
        $this->db->select('a.money,a.gid,a.order_id');
        $this->db->from('order a');
        $this->db->join('goods b','b.id = a.gid','left');
        //自选时间
        if (isset($search['s_start_time']) && isset($search['s_end_time']) && !empty($search['s_start_time']) && !empty($search['s_end_time']) ){
            $search['s_day'] = '';
            $start_time = $search['s_start_time'];
            $end_time = $search['s_end_time'];
            $today = !empty($end_time) ? strtotime(str_replace('／', '-', $end_time)) : strtotime(date("Y-m-d"));
            $start = !empty($start_time) ? strtotime(str_replace('／', '-', $start_time)) : ($today - 86400);
        }

        //按固定时间搜索
        if (isset($search['s_day']) && !empty($search['s_day'])) {
            $day = $search['s_day'];
            switch ($day) {
                //今日
                case 'day':
                    $today = strtotime(date('Y-m-d H:i:s'),time());
                    $start = $today - 86400;
                    break;
                //本周
                case 'week':
                    $today = strtotime(date('Y-m-d H:i:s'),time());
                    $start = $today - (6*86400);
                    break;
                //本月
                case 'month':
                    $today = strtotime(date('Y-m-d H:i:s'),time());
                    //本月第一天
                    $start = strtotime(date('Y-m-01'));
                    break;
            }
        }

        //按商品分类条件搜索
        if (isset($search['s_order_cate']) && !empty($search['s_order_cate'])){
            $cate = $search['s_order_cate'];
            $this->db->where('b.category =',$cate);
        }

        $this->db->where('a.create_time >=',$start);
        $this->db->where('a.create_time <=',$today);

        $this->db->order_by('a.money','DESC');
        $this->db->limit('10');

        $res = $this->db->get()->result_array();

        $res['order_ids'] = array_column($res,'order_id');
        $res['mons'] = array_column($res,'money');

        return $res;
    }

    /**
     * @copyright 订单单条详情数据
     * @param     [type]      $id [description]
     * @return    [type]          [description]
     */

    public function getOrderInfo($id)
    {

        $this->db->select( 'a.*,b.username,d.name gname,e.name goods_name,f.shop' );
        $this->db->from( 'order a' );
        $this->db->join('user b','b.id = a.buyer_id','left');

        $this->db->join('goods_model d','d.id = a.geid','left');
        $this->db->join('goods e','e.id = d.gid','left');
        $this->db->join('user_shop f','f.uid = a.sellers_id','left');

        $this->db->where('a.id = ',$id);
        $data = $this->db->get()->row_array();
        return $data;
    }
}
